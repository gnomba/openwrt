### uci-defaults RouteRich AX3000 ###

set -x

last_4_mac_wlan0="$(ip a show wlan0 | tail -n 1 | sed 's/brd.*$//g' | awk -F':' '{print toupper($5$6)}')"
wlan_name_2g="RouteRich_${last_4_mac_wlan0}"
wlan_name_5g="RouteRich_${last_4_mac_wlan0}_5G"
wlan_password="1234567890"
wlan_mode="ap"
wlan_encryption="psk2"

root_password="${wlan_password}"
lan_ip_address="192.168.1.1"

# log potential errors
exec >/tmp/setup.log 2>&1

if [ -n "${root_password}" ]; then
  (echo "${root_password}"; sleep 1; echo "${root_password}") | passwd > /dev/null
fi

uci -q batch << EOI
# system #
set system.@system[0].hostname=${wlan_name_2g}
set system.@system[0].timezone='MSK-3'
set system.@system[0].log_size='64'
set system.@system[0].zonename='Europe/Moscow'
set system.@system[0].zram_comp_algo='lz4'
set system.ntp.server='3.ru.pool.ntp.org 2.ru.pool.ntp.org 1.ru.pool.ntp.org 0.ru.pool.ntp.org'

# system led #
# все лампочки гаснут после загрузки
# красным загорится 'WAN' если пропадает линк
add system led
set system.@led[-1].name='power'
set system.@led[-1].sysfs='blue:power'
set system.@led[-1].trigger='none'
set system.@led[-1].default='0'
add system led
set system.@led[-1].name='wlan-2g'
set system.@led[-1].sysfs='blue:wlan-24'
set system.@led[-1].trigger='none'
set system.@led[-1].default='0'
add system led
set system.@led[-1].name='wlan-5g'
set system.@led[-1].sysfs='red:wlan-50'
set system.@led[-1].trigger='none'
set system.@led[-1].default='0'
set system.led_lan_1=led
set system.led_lan_1.name='lan-1'
set system.led_lan_1.sysfs='blue:lan-1'
set system.led_lan_1.trigger='none'
set system.led_lan_1.default='0'
set system.led_lan_2=led
set system.led_lan_2.name='lan-2'
set system.led_lan_2.sysfs='blue:lan-2'
set system.led_lan_2.trigger='none'
set system.led_lan_2.default='0'
set system.led_lan_3=led
set system.led_lan_3.name='lan-3'
set system.led_lan_3.sysfs='blue:lan-3'
set system.led_lan_3.trigger='none'
set system.led_lan_3.default='0'
set system.led_wan=led
set system.led_wan.name='wan-on'
set system.led_wan.sysfs='blue:wan'
set system.led_wan.trigger='none'
set system.led_wan.default='0'
set system.led_wan_off=led
set system.led_wan_off.name='wan-off'
set system.led_wan_off.sysfs='red:wan'
set system.led_wan_off.trigger='netdev'
# тут поменять на свой физический интерфейс
set system.led_wan_off.dev='wan'
set system.led_wan_off.mode='link'
commit system

# wireless #
# 2.4GHz #
set wireless.radio0.disabled='0'
set wireless.radio0.country='RU'
set wireless.radio0.channel='auto'
set wireless.radio0.band='2g'
set wireless.radio0.htmode='HE40'
set wireless.radio0.cell_density='0'
set wireless.default_radio0.device='radio0'
set wireless.default_radio0.network='lan'
set wireless.default_radio0.ssid='${wlan_name_2g}'
set wireless.default_radio0.mode='${wlan_mode}'
set wireless.default_radio0.encryption='${wlan_encryption}'
set wireless.default_radio0.key='${wlan_password}'
# 5GHz #
set wireless.radio1.disabled='0'
set wireless.radio1.country='RU'
set wireless.radio1.channel='auto'
set wireless.radio1.band='5g'
set wireless.radio1.htmode='HE160'
set wireless.radio1.cell_density='0'
set wireless.default_radio1.device='radio1'
set wireless.default_radio1.network='lan'
set wireless.default_radio1.ssid='${wlan_name_5g}'
set wireless.default_radio1.mode='${wlan_mode}'
set wireless.default_radio1.encryption='${wlan_encryption}'
set wireless.default_radio1.key='${wlan_password}'
commit wireless

# network #
set network.lan.ipaddr='${lan_ip_address}'
set network.lan.netmask='255.255.255.0'
commit network

# adblock #
set adblock.global.adb_trigger='wan'
commit adblock
EOI

# https-dns-proxy #
while uci -q delete https-dns-proxy.@https-dns-proxy[0]; do :; done
uci set https-dns-proxy.config.force_dns='1'
uci set https-dns-proxy.config.canary_domains_icloud='1'
uci set https-dns-proxy.config.canary_domains_mozilla='1'
uci add https-dns-proxy https-dns-proxy
uci set https-dns-proxy.@https-dns-proxy[0].resolver_url='https://cloudflare-dns.com/dns-query'
uci set https-dns-proxy.@https-dns-proxy[0].bootstrap_dns='1.1.1.1,1.0.0.1'
uci set https-dns-proxy.@https-dns-proxy[0].listen_addr='127.0.0.1'
uci set https-dns-proxy.@https-dns-proxy[0].listen_port='5053'
uci set https-dns-proxy.@https-dns-proxy[0].user='nobody'
uci set https-dns-proxy.@https-dns-proxy[0].group='nogroup'
uci add https-dns-proxy https-dns-proxy
uci set https-dns-proxy.@https-dns-proxy[1].resolver_url='https://dns.google/dns-query'
uci set https-dns-proxy.@https-dns-proxy[1].bootstrap_dns='8.8.4.4,8.8.8.8'
uci set https-dns-proxy.@https-dns-proxy[1].listen_addr='127.0.0.1'
uci set https-dns-proxy.@https-dns-proxy[1].listen_port='5054'
uci set https-dns-proxy.@https-dns-proxy[1].user='nobody'
uci set https-dns-proxy.@https-dns-proxy[1].group='nogroup'
uci add https-dns-proxy https-dns-proxy
uci set https-dns-proxy.@https-dns-proxy[2].resolver_url='https://common.dot.dns.yandex.net/dns-query'
uci set https-dns-proxy.@https-dns-proxy[2].bootstrap_dns='77.88.8.8,77.88.8.1'
uci set https-dns-proxy.@https-dns-proxy[2].listen_addr='127.0.0.1'
uci set https-dns-proxy.@https-dns-proxy[2].listen_port='5055'
uci set https-dns-proxy.@https-dns-proxy[2].user='nobody'
uci set https-dns-proxy.@https-dns-proxy[2].group='nogroup'
uci add https-dns-proxy https-dns-proxy
uci set https-dns-proxy.@https-dns-proxy[3].resolver_url='https://router.comss.one/dns-query'
uci set https-dns-proxy.@https-dns-proxy[3].bootstrap_dns='195.133.25.16,212.109.195.93,83.220.169.155'
uci set https-dns-proxy.@https-dns-proxy[3].listen_addr='127.0.0.1'
uci set https-dns-proxy.@https-dns-proxy[3].listen_port='5056'
uci set https-dns-proxy.@https-dns-proxy[3].user='nobody'
uci set https-dns-proxy.@https-dns-proxy[3].group='nogroup'
uci commit https-dns-proxy

/etc/init.d/rpcd restart
/etc/init.d/https-dns-proxy enable
/etc/init.d/https-dns-proxy restart

# dnsmasq #
uci -q get dhcp.@dnsmasq[0] || uci add dhcp dnsmasq
uci set dhcp.@dnsmasq[0].cachesize='2048'
uci set dhcp.@dnsmasq[0].dnsforwardmax='2048'
uci set dhcp.@dnsmasq[0].min_cache_ttl="600"
uci set dhcp.@dnsmasq[0].max_cache_ttl="86400"
uci set dhcp.@dnsmasq[0].nonegcache='1'
vVIA_COMSS_LIST="comss.ru comss.one chatgpt.com oaistatic.com oaiusercontent.com openai.com microsoft.com windowsupdate.com bing.com supercell.com seeurlpcl.com supercellid.com
supercellgames.com clashroyale.com brawlstars.com clash.com clashofclans.com x.ai grok.com"
for vCOMSS_ITEM in ${vVIA_COMSS_LIST}; do
    uci add_list dhcp.@dnsmasq[0].server="/*.${vCOMSS_ITEM}/127.0.0.1#5056"
done
vDHCP_DOMAIN_LIST="chatgpt.com openai.com webrtc.chatgpt.com ios.chat.openai.com searchgpt.com"
for vDOMAIN_ITEM in ${vDHCP_DOMAIN_LIST}; do
    uci add dhcp domain
    uci set dhcp.@domain[-1].name="${vDOMAIN_ITEM}"
    uci set dhcp.@domain[-1].ip="94.131.119.85"
done
uci commit dhcp

# firewall fix mtu #
[ "$(uci get firewall.@zone[0].name 2>/dev/null)" = "lan" ] && {
    [ "$(uci get firewall.@zone[0].mtu_fix 2>/dev/null)" = "1" ] || uci set firewall.@zone[0].mtu_fix='1'
}
uci commit firewall
service firewall restart

# network         #
# packet steering #
uci -q get network.globals.packet_steering > /dev/null || {
    uci set network.globals='globals'
    uci set network.globals.packet_steering=1
    uci commit network
}
